#include <GL/freeglut.h>
#include <iostream>
#include <stdlib.h>
#include <Windows.h>
#include <cmath>

void Escena() {
    glClearColor(1.0f, 1.0f, 1.0f, 1.0f);  // Establecer el color de fondo blanco
    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);  // Limpiar el buffer de color y profundidad

    // Configurar la proyección y la vista
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluPerspective(45.0f, 1.0f, 0.1f, 100.0f);
    glMatrixMode(GL_MODELVIEW);
    glLoadIdentity();
    gluLookAt(0.0f, 0.0f, 5.0f, 0.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f);

    // Configurar la iluminación
    GLfloat lightPosition[] = { 0.0f, 5.0f, 5.0f, 0.0f };
    GLfloat lightColor[] = { 1.0f, 1.0f, 1.0f, 1.0f };
    glLightfv(GL_LIGHT0, GL_POSITION, lightPosition);
    glLightfv(GL_LIGHT0, GL_DIFFUSE, lightColor);
    glEnable(GL_LIGHTING);
    glEnable(GL_LIGHT0);

    // Configurar el material del cubo
    GLfloat cubeAmbient[] = { 0.2f, 0.2f, 0.2f, 1.0f };
    GLfloat cubeDiffuse[] = { 0.8f, 0.8f, 0.8f, 1.0f };
    glMaterialfv(GL_FRONT_AND_BACK, GL_AMBIENT, cubeAmbient);
    glMaterialfv(GL_FRONT_AND_BACK, GL_DIFFUSE, cubeDiffuse);

    // Renderizar el cubo principal
    glPushMatrix();
    glutSolidCube(1.0f);
    glPopMatrix();

    // Configurar la matriz de sombra para proyectar la sombra del cubo
    GLfloat shadowMatrix[16] = {
        lightPosition[1], 0.0f, 0.0f, 0.0f,
        -lightPosition[0], 0.0f, -lightPosition[2], -1.0f,
        0.0f, 0.0f, lightPosition[1], 0.0f,
        0.0f, 0.0f, 0.0f, lightPosition[1]
    };
    glDisable(GL_LIGHTING);
    glColor3f(0.2f, 0.2f, 0.2f);  // Color oscuro para la sombra
    glPushMatrix();
    glMultMatrixf(shadowMatrix);
    glutSolidCube(1.0f);
    glPopMatrix();
    glEnable(GL_LIGHTING);

    // Intercambiar los buffers y manejar eventos
    glutSwapBuffers();
    glutPostRedisplay();
    glutMainLoopEvent();
}

int main(int argc, char** argv) {
    // Inicialización de OpenGL y creación de la ventana
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_DEPTH | GLUT_DOUBLE | GLUT_RGBA);
    glutInitWindowSize(800, 600);
    glutCreateWindow("Ejemplo práctico de cómo implementar sombras en OpenGL.");

    // Asignar la función de renderizado
    glutDisplayFunc(Escena);

    // Bucle principal de renderizado
    glutMainLoop();

    return 0;
}
